let bigCube,bigCubeGeometry,scene,camera,renderer,smallFigure,bigCubeMaterials,materialsXY,materialsZX,materialsZY,hexagonalPrismXY,hexagonalPrismZX,hexagonalPrismZY,hexagonalPrismGeomXY,hexagonalPrismGeomZX,hexagonalPrismGeomZY;window.onload=init;class hexagonalPrismGeom{constructor(e){if(12!=e.length)throw new SyntaxError("Неверно задан массив точек для шестиугольной призмы.");this.lowerGround=[],this.upperGround=[];for(let t=0;t<6;++t)this.lowerGround.push(e[t]);for(let t=6;t<12;++t)this.upperGround.push(e[t]);this.faces=[new THREE.Face3(0,1,2),new THREE.Face3(0,2,3),new THREE.Face3(3,4,5),new THREE.Face3(3,5,0),new THREE.Face3(6,7,8),new THREE.Face3(6,8,9),new THREE.Face3(9,10,11),new THREE.Face3(9,11,6),new THREE.Face3(0,6,7),new THREE.Face3(0,7,1),new THREE.Face3(1,2,8),new THREE.Face3(1,8,7),new THREE.Face3(2,3,9),new THREE.Face3(2,9,8),new THREE.Face3(3,4,10),new THREE.Face3(3,10,9),new THREE.Face3(4,5,11),new THREE.Face3(4,11,10),new THREE.Face3(5,0,6),new THREE.Face3(5,6,11)],this.geom=new THREE.Geometry,this.geom.vertices=e,this.geom.faces=this.faces,this.geom.computeFaceNormals(),this.geom.computeVertexNormals()}setHeightX(e){for(let t of this.upperGround)t.x=e;this.geom.verticesNeedUpdate=!0,this.geom.computeFaceNormals()}setHeightY(e){for(let t of this.upperGround)t.y=e;this.geom.verticesNeedUpdate=!0,this.geom.computeFaceNormals()}setHeightZ(e){for(let t of this.upperGround)t.z=e;this.geom.verticesNeedUpdate=!0,this.geom.computeFaceNormals()}clone(){return this.geom.clone()}getGeom(){return this.geom}update(){this.geom.verticesNeedUpdate=!0,this.geom.computeFaceNormals()}}class triangularPrismGeom{#e=[];#t=[];#n=0;constructor(e,t,n){if(3!=e.length)throw new SyntaxError("Неверно задан массив точек для треугольной призмы.");this.#n=n,this.#e=e;let a=[];for(let t of e)a.push(new THREE.Vector3(t.x,t.y,t.z));for(let e of a)0==n?e.y=t:1==n?e.z=t:e.x=t,this.#t.push(e);this.faces=[new THREE.Face3(0,1,2),new THREE.Face3(3,4,5),new THREE.Face3(0,3,4),new THREE.Face3(0,4,1),new THREE.Face3(1,4,5),new THREE.Face3(1,5,2),new THREE.Face3(0,3,5),new THREE.Face3(0,5,2)],this.geom=new THREE.Geometry,this.geom.vertices=this.#e.concat(this.#t),this.geom.faces=this.faces,console.log(this.geom.vertices,this.geom.faces),this.geom.computeFaceNormals(),this.geom.computeVertexNormals()}setHeight(e){for(let t of this.upperGround)0==this.#n?t.y=e:1==this.#n?t.z=e:t.x=e;this.geom.verticesNeedUpdate=!0,this.geom.computeFaceNormals()}getGeom(){return this.geom}update(){this.geom.verticesNeedUpdate=!0,this.geom.computeFaceNormals()}}function getgVolume(e,t){return 3*t*e*e-2*e*e*e}function showStraightProblemUI(e){let t=document.getElementById("straight-problem-div");t.style.display=e?"block":"none"}function showProjectionsUI(e){let t=document.getElementById("projections-div");t.style.display=e?"block":"none"}function updateSmallFigure(e,t,n){let a=[new THREE.Vector3(0,0,0),new THREE.Vector3(e,0,0),new THREE.Vector3(e,0,e),new THREE.Vector3(0,0,e),new THREE.Vector3(t,t-e,t),new THREE.Vector3(t-e,t-e,t),new THREE.Vector3(t,t,t),new THREE.Vector3(t-e,t,t),new THREE.Vector3(t-e,t,t-e),new THREE.Vector3(t,t,t-e),new THREE.Vector3(t,t-e,t-e),new THREE.Vector3(0,e,e),new THREE.Vector3(0,e,0),new THREE.Vector3(e,e,0)];n.children.forEach((function(e){e.geometry.vertices=a,e.geometry.verticesNeedUpdate=!0,e.geometry.computeFaceNormals()}))}function updatet(e){document.getElementById("tVal").innerHTML=`t = ${e}`}function updateT(e){document.getElementById("TVal").innerHTML=`T = ${e}`}function updategVolumeVal(e,t){document.getElementById("gVolume").innerHTML=`${getgVolume(e,t)}`}function updateGVolumeVal(e){document.getElementById("GVolume").innerHTML=""+e*e*e}function updateProbabilityVal(e,t){let n=document.getElementById("probability"),a=getgVolume(e,t)/(t*t*t);console.log(a),n.innerText=`${a}`}function updateAllTextElems(e,t){updatet(e),updateT(t),updateGVolumeVal(t),updategVolumeVal(e,t),updateProbabilityVal(e,t)}function showProjections(e,t,n,a){e.visible=a,t.visible=a,n.visible=a}function getCubeGeomSubstructedByXYZY(e,t){let n=[new THREE.Vector3(0,0,0),new THREE.Vector3(e,0,0),new THREE.Vector3(t,0,t-e),new THREE.Vector3(0,0,e),new THREE.Vector3(t,t-e,t),new THREE.Vector3(t-e,t-e,t),new THREE.Vector3(t,t,t),new THREE.Vector3(t-e,t,t),new THREE.Vector3(0,t,e),new THREE.Vector3(t,t,t-e),new THREE.Vector3(0,e,0),new THREE.Vector3(e,e,0)],a=[new THREE.Face3(0,1,2),new THREE.Face3(0,2,3),new THREE.Face3(2,3,4),new THREE.Face3(3,4,5),new THREE.Face3(4,5,6),new THREE.Face3(5,6,7),new THREE.Face3(6,7,8),new THREE.Face3(6,8,9),new THREE.Face3(8,9,10),new THREE.Face3(9,10,11),new THREE.Face3(10,11,0),new THREE.Face3(11,0,1),new THREE.Face3(1,2,9),new THREE.Face3(1,9,11),new THREE.Face3(2,4,6),new THREE.Face3(2,6,9),new THREE.Face3(0,3,8),new THREE.Face3(0,8,10),new THREE.Face3(3,5,7),new THREE.Face3(3,7,8)],r=new THREE.Geometry;return r.vertices=n,r.faces=a,r.computeFaceNormals(),r.computeVertexNormals(),r}function getFinalSmallFigGeom(e,t){let n=[new THREE.Vector3(0,0,0),new THREE.Vector3(e,0,0),new THREE.Vector3(e,0,e),new THREE.Vector3(0,0,e),new THREE.Vector3(t,t-e,t),new THREE.Vector3(t-e,t-e,t),new THREE.Vector3(t,t,t),new THREE.Vector3(t-e,t,t),new THREE.Vector3(t-e,t,t-e),new THREE.Vector3(t,t,t-e),new THREE.Vector3(t,t-e,t-e),new THREE.Vector3(0,e,e),new THREE.Vector3(0,e,0),new THREE.Vector3(e,e,0)];const a=[new THREE.Face3(0,2,1),new THREE.Face3(3,2,0),new THREE.Face3(2,3,4),new THREE.Face3(3,5,4),new THREE.Face3(4,5,6),new THREE.Face3(5,7,6),new THREE.Face3(6,9,8),new THREE.Face3(6,8,7),new THREE.Face3(6,4,10),new THREE.Face3(6,10,9),new THREE.Face3(1,10,2),new THREE.Face3(10,4,2),new THREE.Face3(9,12,8),new THREE.Face3(9,13,12),new THREE.Face3(0,1,13),new THREE.Face3(0,13,12),new THREE.Face3(1,13,9),new THREE.Face3(1,9,10),new THREE.Face3(0,11,3),new THREE.Face3(0,12,11),new THREE.Face3(8,7,11),new THREE.Face3(8,11,12),new THREE.Face3(5,3,11),new THREE.Face3(5,11,7)];let r=new THREE.Geometry;return r.vertices=n,r.faces=a,r.computeFaceNormals(),r.computeVertexNormals(),r}function init(){showStraightProblemUI(!0),showProjectionsUI(!1);document.getElementById("tVal");let e=document.getElementById("t-slider"),t=(document.getElementById("TVal"),document.getElementById("T-slider")),n=parseFloat(t.value),a=n,r=n,o=parseFloat(e.value),i=o;updateAllTextElems(o,n),document.getElementById("TVal-reversed-task-lbl").style.display="none";let c=document.getElementById("visibleBigFigure"),s=document.getElementById("visibleSmallFigure");e.oninput=function(a){o=parseFloat(a.target.value),o>n?(o=i,n=r,t.value=n,e.value=o):(i=o,r=n,updateAllTextElems(o,n),updateSmallFigure(o,n,smallFigure),renderer.render(scene,camera))},t.oninput=function(a){n=parseFloat(a.target.value),o>n?(o=i,n=r,t.value=n,e.value=o):(i=o,r=n,updateAllTextElems(o,n),updateSmallFigure(o,n,smallFigure),scene.remove(bigCube),bigCubeGeometry=new THREE.BoxGeometry(n,n,n),bigCube=new THREE.SceneUtils.createMultiMaterialObject(bigCubeGeometry,bigCubeMaterials),bigCube.position.set(n/2,n/2,n/2),scene.add(bigCube),renderer.render(scene,camera))},c.oninput=function(e){e.target.checked?bigCube.visible=!0:bigCube.visible=!1,renderer.render(scene,camera),console.log(scene.getObjectByName("bigCube"))},s.oninput=function(e){e.target.checked?smallFigure.visible=!0:smallFigure.visible=!1,renderer.render(scene,camera)},document.getElementById("projections-turn").onclick=function(e){showStraightProblemUI(!1),smallFigure.visible=!1,showProjectionsUI(!0),showProjections(hexagonalPrismXY,hexagonalPrismZX,hexagonalPrismZY,!0),scene.remove(bigCube),bigCubeGeometry=new THREE.BoxGeometry(a,a,a),bigCube=new THREE.SceneUtils.createMultiMaterialObject(bigCubeGeometry,bigCubeMaterials),bigCube.position.set(a/2,a/2,a/2),scene.add(bigCube),renderer.render(scene,camera)};let E=o,l=0,m=!0,g=!1,u=!1;let w=document.getElementById("prj-anim"),d=null;w.onclick=function e(t){bigCubeMaterials=[new THREE.MeshBasicMaterial({color:0,wireframe:!0}),new THREE.MeshLambertMaterial({color:7829503,side:THREE.DoubleSide,transparent:!0,opacity:.5})],l+=.05,m&&(hexagonalPrismGeomXY.setHeightY(l),l>=a&&(scene.remove(hexagonalPrismXY),scene.remove(bigCube),bigCubeGeometry=hexagonalPrismGeomXY.clone(),bigCube=new THREE.SceneUtils.createMultiMaterialObject(bigCubeGeometry,bigCubeMaterials),scene.add(bigCube),l=0,m=!1,u=!0)),u&&(hexagonalPrismGeomZY.setHeightX(l),l>=a&&(scene.remove(hexagonalPrismZY),scene.remove(bigCube),bigCubeGeometry=getCubeGeomSubstructedByXYZY(E,a),bigCube=new THREE.SceneUtils.createMultiMaterialObject(bigCubeGeometry,bigCubeMaterials),scene.add(bigCube),l=0,u=!1,g=!0)),g&&(hexagonalPrismGeomZX.setHeightZ(l),l>=a&&(scene.remove(hexagonalPrismZX),scene.remove(bigCube),bigCubeGeometry=getFinalSmallFigGeom(E,a),bigCube=new THREE.SceneUtils.createMultiMaterialObject(bigCubeGeometry,bigCubeMaterials),scene.add(bigCube),l=0,u=!1,g=!0)),renderer.render(scene,camera),l<a&&(null!=d&&(cancelAnimationFrame(d),d=null),d=requestAnimationFrame(e))},document.getElementById("back").onclick=function(e){void 0===scene.getObjectByName("hexagonalPrismXY")&&scene.add(hexagonalPrismXY),void 0===scene.getObjectByName("hexagonalPrismZX")&&scene.add(hexagonalPrismZX),void 0===scene.getObjectByName("hexagonalPrismZY")&&scene.add(hexagonalPrismZY),scene.remove(scene.getObjectByName("triPrismXY")),scene.remove(scene.getObjectByName("triPrismZY")),scene.remove(scene.getObjectByName("intersFig")),l=0,m=!0,g=!1,u=!1,cancelAnimationFrame(d),hexagonalPrismGeomXY.setHeightY(l),hexagonalPrismGeomZX.setHeightZ(l),hexagonalPrismGeomZY.setHeightX(l),showStraightProblemUI(!0),smallFigure.visible=s.checked,showProjectionsUI(!1),showProjections(hexagonalPrismXY,hexagonalPrismZX,hexagonalPrismZY,!1),scene.remove(bigCube),bigCubeGeometry=new THREE.BoxGeometry(n,n,n),bigCubeMaterials=[new THREE.MeshBasicMaterial({color:0,wireframe:!0}),new THREE.MeshLambertMaterial({color:7829503,side:THREE.DoubleSide,transparent:!0,opacity:.5})],bigCube=new THREE.SceneUtils.createMultiMaterialObject(bigCubeGeometry,bigCubeMaterials),bigCube.position.set(n/2,n/2,n/2),scene.add(bigCube),renderer.render(scene,camera)};let H=document.getElementById("prisms-height-xy");H.oninput=function(e){hexagonalPrismGeomXY.setHeightY(parseFloat(H.value)),renderer.render(scene,camera)};let T=document.getElementById("prisms-height-zy");T.oninput=function(e){hexagonalPrismGeomZY.setHeightX(parseFloat(T.value)),renderer.render(scene,camera)};let h=document.getElementById("prisms-height-zx");h.oninput=function(e){hexagonalPrismGeomZX.setHeightZ(parseFloat(h.value)),renderer.render(scene,camera)};let R=H.value;document.getElementById("visible-triprisms").onclick=function(e){if(e.target.checked){showProjections(hexagonalPrismXY,hexagonalPrismZX,hexagonalPrismZY,!1),scene.remove(bigCube);let e=[new THREE.Vector3(E,0,0),new THREE.Vector3(a,0,E),new THREE.Vector3(a,0,0)],t=new triangularPrismGeom(e,a,0),n=[new THREE.MeshPhongMaterial({color:16187392,side:THREE.DoubleSide,transparent:!0,opacity:.4}),new THREE.MeshBasicMaterial({color:16187392,wireframe:!0})],r=new THREE.SceneUtils.createMultiMaterialObject(t.getGeom(),n);r.name="triPrismXY",scene.add(r);let o=[new THREE.Vector3(0,0,E),new THREE.Vector3(E,0,a),new THREE.Vector3(0,0,a)],i=new triangularPrismGeom(o,a,0);new THREE.SceneUtils.createMultiMaterialObject(i.getGeom(),n).name="triPrismXY2";let c=[new THREE.Vector3(0,E,0),new THREE.Vector3(0,a,E),new THREE.Vector3(0,a,0)],s=new triangularPrismGeom(c,a,2),l=[new THREE.MeshPhongMaterial({color:13958912,side:THREE.DoubleSide,transparent:!0,opacity:.4}),new THREE.MeshBasicMaterial({color:13958912,wireframe:!0})],m=new THREE.SceneUtils.createMultiMaterialObject(s.getGeom(),l);m.name="triPrismZY",scene.add(m);let g=[new THREE.Vector3(a,E,0),new THREE.Vector3(a,a,0),new THREE.Vector3(E,a,0),new THREE.Vector3(E,E,0),new THREE.Vector3(a,a,E)],u=[new THREE.Face4(0,1,2,3),new THREE.Face3(0,1,4),new THREE.Face3(1,2,4),new THREE.Face3(2,3,4),new THREE.Face3(0,3,4)];const w=new THREE.Geometry;w.vertices=g,w.faces=u,w.computeFaceNormals(),w.computeVertexNormals();const d=[new THREE.MeshPhongMaterial({color:3822,side:THREE.DoubleSide}),new THREE.MeshBasicMaterial({color:3822,wireframe:!0})];let H=new THREE.SceneUtils.createMultiMaterialObject(w,d);H.name="intersFig",scene.add(H);let T=[new THREE.Vector3(0,0,E),new THREE.Vector3(0,E,a),new THREE.Vector3(0,0,a)],h=new triangularPrismGeom(T,a,2);new THREE.SceneUtils.createMultiMaterialObject(h.getGeom(),l).name="triPrismZY2",renderer.render(scene,camera)}else showProjections(hexagonalPrismXY,hexagonalPrismZX,hexagonalPrismZY,!0),scene.add(bigCube),scene.remove(scene.getObjectByName("triPrismXY")),scene.remove(scene.getObjectByName("triPrismZY")),scene.remove(scene.getObjectByName("intersFig")),renderer.render(scene,camera)},scene=new THREE.Scene,camera=new THREE.PerspectiveCamera(45,window.innerWidth/window.innerHeight,.1,1e3),camera.position.x=25,camera.position.y=15,camera.position.z=8;camera.lookAt(scene.position),scene.add(camera);const b=new THREE.AxisHelper(20);b.position.set(0,0,0),scene.add(b),bigCubeGeometry=new THREE.BoxGeometry(n,n,n);const F=new THREE.MeshBasicMaterial({color:0,wireframe:!0}),p=new THREE.MeshLambertMaterial({color:7829503,transparent:!0,opacity:.5});F.castShadow=!0,p.castShadow=!0,bigCubeMaterials=[F,p],bigCube=new THREE.SceneUtils.createMultiMaterialObject(bigCubeGeometry,bigCubeMaterials),bigCube.name="bigCube",bigCube.position.set(n/2,n/2,n/2),scene.add(bigCube);const P=getFinalSmallFigGeom(o,n),x=[new THREE.MeshLambertMaterial({color:4521796,side:THREE.DoubleSide}),new THREE.MeshBasicMaterial({color:4521796,wireframe:!0})];smallFigure=THREE.SceneUtils.createMultiMaterialObject(P,x),scene.add(smallFigure);let V=[new THREE.Vector3(0,0,0),new THREE.Vector3(o,0,0),new THREE.Vector3(n,0,n-o),new THREE.Vector3(n,0,n),new THREE.Vector3(n-o,0,n),new THREE.Vector3(0,0,o),new THREE.Vector3(0,R,0),new THREE.Vector3(o,R,0),new THREE.Vector3(n,R,n-o),new THREE.Vector3(n,R,n),new THREE.Vector3(n-o,R,n),new THREE.Vector3(0,R,o)];hexagonalPrismGeomXY=new hexagonalPrismGeom(V),materialsXY=[new THREE.MeshPhongMaterial({color:4521796,side:THREE.DoubleSide}),new THREE.MeshBasicMaterial({color:4521796,wireframe:!0})],hexagonalPrismXY=THREE.SceneUtils.createMultiMaterialObject(hexagonalPrismGeomXY.getGeom(),materialsXY),hexagonalPrismXY.name="hexagonalPrismXY",scene.remove(scene.getChildByName("hexagonalPrismXY")),scene.add(hexagonalPrismXY);const y=hexagonalPrismGeomXY.clone().vertices;for(let e of y)e.y=e.z,e.z=e.x,e.x=0;materialsZY=[new THREE.MeshPhongMaterial({color:16187392,side:THREE.DoubleSide}),new THREE.MeshBasicMaterial({color:16187392,wireframe:!0})],hexagonalPrismGeomZY=new hexagonalPrismGeom(y),hexagonalPrismZY=THREE.SceneUtils.createMultiMaterialObject(hexagonalPrismGeomZY.getGeom(),materialsZY),hexagonalPrismZY.children.forEach((function(e){e.castShadow=!0})),hexagonalPrismZY.name="hexagonalPrismZY",scene.remove(scene.getChildByName("hexagonalPrismZY")),scene.add(hexagonalPrismZY);const M=hexagonalPrismGeomXY.clone().vertices;for(let e of M)e.y=e.z,e.z=0;materialsZX=[new THREE.MeshPhongMaterial({color:1009653,side:THREE.DoubleSide}),new THREE.MeshBasicMaterial({color:1009653,wireframe:!0})],hexagonalPrismGeomZX=new hexagonalPrismGeom(M),hexagonalPrismZX=THREE.SceneUtils.createMultiMaterialObject(hexagonalPrismGeomZX.getGeom(),materialsZX),hexagonalPrismZX.children.forEach((function(e){e.castShadow=!0})),hexagonalPrismZX.name="hexagonalPrismZX",scene.remove(scene.getChildByName("hexagonalPrismZX")),scene.add(hexagonalPrismZX),showProjections(hexagonalPrismXY,hexagonalPrismZX,hexagonalPrismZY,!1);const G=new THREE.SpotLight(16777215);G.position.set(100,100,100),G.castShadow=!0,G.target=bigCube,scene.add(G);const f=new THREE.SpotLight(16777215);f.position.set(-100,-100,-100),f.castShadow=!0,f.target=bigCube,scene.add(f),renderer=new THREE.WebGLRenderer,renderer.setClearColor(new THREE.Color(16777215)),renderer.setSize(window.innerWidth,window.innerHeight),renderer.shadowMapEnabled=!0,renderer.antialias=!0,document.getElementById("WebGL-output").appendChild(renderer.domElement);let C=new THREE.OrbitControls(camera,renderer.domElement);C.autoRotate=!1;let v=new THREE.Clock,Y=!1;const X=document.getElementById("camera-move");X.onclick=function(){let e;Y?(X.innerText="Свободное движение камеры",cancelAnimationFrame(e)):(X.innerText="Остановить движение",e=requestAnimationFrame((function e(t){let n=v.getDelta();C.update(n),Y&&requestAnimationFrame(e),renderer.render(scene,camera)}))),Y=!Y},renderer.render(scene,camera)}